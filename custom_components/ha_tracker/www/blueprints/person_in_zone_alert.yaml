blueprint:
  name: Person in Zone Alert (multilingual push & TTS)
  description: >
    Sends either a push notification (normal or Companion-App TTS) when the
    selected person enters or leaves a zone.

    • Languages: Arabic (ar), German (de), English (en), Spanish (es),
      French (fr), Hindi (hi), Italian (it), Japanese (ja), Portuguese (pt),
      Chinese (zh).  
    • Two device lists: phones that should **speak** the message (TTS)
      and phones that should just **display** it.  
    • Falls back to notify.notify if no device is chosen.
  domain: automation
  input:
    # ── Basics ──────────────────────────────────────────────────────
    person_entity:
      name: Person
      selector:
        entity:
          domain: person

    zone_entity:
      name: Zone
      selector:
        entity:
          domain: zone

    direction:
      name: Direction
      default: enter
      selector:
        select:
          options: [enter, leave]

    language:
      name: Message language
      default: en
      selector:
        select:
          options: [ar, de, en, es, fr, hi, it, ja, pt, zh]

    # ── Destinations ────────────────────────────────────────────────
    tts_devices:
      name: TTS devices
      description: Phones/tablets that should **speak** the message
      selector:
        device:
          integration: mobile_app
          multiple: true

    push_devices:
      name: Push-only devices
      description: Phones that should **display** the message
      selector:
        device:
          integration: mobile_app
          multiple: true

homeassistant:
  min_version: "2024.6.0"        # templated service names need 2024.6+

# ── Automation body ────────────────────────────────────────────────
trigger:
  - platform: zone
    entity_id: !input person_entity
    zone: !input zone_entity
    event: !input direction

variables:
  zone_id: !input zone_entity
  lang: !input language
  tts_devs: !input tts_devices
  push_raw: !input push_devices
  push_devs: "{{ push_raw | reject('in', tts_devs) | list }}"

action:
  - choose:
      # ── TTS loop ─────────────────────────────────────────
      - conditions: "{{ tts_devs | length > 0 }}"
        sequence:
          - repeat:
              for_each: "{{ tts_devs }}"
              sequence:
                - service: >
                    {{ 'notify.mobile_app_' ~ device_attr(repeat.item, 'name')
                       | lower | replace(' ', '_') }}
                  data:
                    message: "TTS"
                    data:
                      tts_text: >
                        {% set txt = {
                          'ar': {'enter':'دخل إلى','leave':'غادر'},
                          'de': {'enter':'hat betreten','leave':'hat verlassen'},
                          'en': {'enter':'has entered','leave':'has left'},
                          'es': {'enter':'ha entrado en','leave':'ha salido de'},
                          'fr': {'enter':'est entré dans','leave':'est sorti de'},
                          'hi': {'enter':'में प्रवेश किया','leave':'से निकल गया'},
                          'it': {'enter':'è entrato in','leave':'è uscito da'},
                          'ja': {'enter':'に入りました','leave':'から出ました'},
                          'pt': {'enter':'entrou em','leave':'saiu de'},
                          'zh': {'enter':'进入了','leave':'离开了'}
                        } %}
                        {{ trigger.to_state.name }} 
                        {{ txt.get(lang, txt['en'])[trigger.event] }} 
                        {{ state_attr(zone_id, 'friendly_name') or zone_id }}
                      priority: high
                      ttl: 0

      # ── Push loop ─────────────────────────────────────────
      - conditions: "{{ push_devs | length > 0 }}"
        sequence:
          - repeat:
              for_each: "{{ push_devs }}"
              sequence:
                - service: >
                    {{ 'notify.mobile_app_' ~ device_attr(repeat.item, 'name')
                       | lower | replace(' ', '_') }}
                  data:
                    message: >
                      {% set txt = {
                        'ar': {'enter':'دخل إلى','leave':'غادر'},
                        'de': {'enter':'hat betreten','leave':'hat verlassen'},
                        'en': {'enter':'has entered','leave':'has left'},
                        'es': {'enter':'ha entrado en','leave':'ha salido de'},
                        'fr': {'enter':'est entré dans','leave':'est sorti de'},
                        'hi': {'enter':'में प्रवेश किया','leave':'से निकल गया'},
                        'it': {'enter':'è entrato in','leave':'è uscito da'},
                        'ja': {'enter':'に入りました','leave':'から出ました'},
                        'pt': {'enter':'entrou em','leave':'saiu de'},
                        'zh': {'enter':'进入了','leave':'离开了'}
                      } %}
                      {{ trigger.to_state.name }} 
                      {{ txt.get(lang, txt['en'])[trigger.event] }} 
                      {{ state_attr(zone_id, 'friendly_name') or zone_id }}
                    data:
                      priority: high
                      ttl: 0
    default:
      - service: notify.notify
        data:
          message: >
            {% set txt = {
              'ar': {'enter':'دخل إلى','leave':'غادر'},
              'de': {'enter':'hat betreten','leave':'hat verlassen'},
              'en': {'enter':'has entered','leave':'has left'},
              'es': {'enter':'ha entrado en','leave':'ha salido de'},
              'fr': {'enter':'est entré dans','leave':'est sorti de'},
              'hi': {'enter':'में प्रवेश किया','leave':'से निकल गया'},
              'it': {'enter':'è entrato in','leave':'è uscito da'},
              'ja': {'enter':'に入りました','leave':'から出ました'},
              'pt': {'enter':'entrou em','leave':'saiu de'},
              'zh': {'enter':'进入了','leave':'离开了'}
            } %}
            {{ trigger.to_state.name }} 
            {{ txt.get(lang, txt['en'])[trigger.event] }} 
            {{ state_attr(zone_id, 'friendly_name') or zone_id }}
          data:
            priority: high
            ttl: 0

mode: single
